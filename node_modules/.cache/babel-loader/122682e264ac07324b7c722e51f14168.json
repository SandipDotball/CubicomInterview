{"ast":null,"code":"import mapProps from \"./mapProps\";\nimport omit from \"./utils/omit\";\nexport function omitProps() {\n  var propNames = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    propNames[_i] = arguments[_i];\n  }\n\n  return mapProps(function (props) {\n    return omit.apply(void 0, [props].concat(propNames));\n  });\n}\nexport default omitProps;","map":{"version":3,"sources":["omitProps.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,IAAP,MAAiB,cAAjB;AAEA,OAAM,SAAA,SAAA,GAAA;AAA+C,MAAA,SAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAiB;AAAjB,IAAA,SAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACnD,SAAO,QAAQ,CAAC,UAAC,KAAD,EAAM;AAAK,WAAA,IAAI,CAAA,KAAJ,CAAI,KAAA,CAAJ,EAAI,CAAC,KAAD,EAAM,MAAN,CAAJ,SAAI,CAAJ,CAAA;AAAyB,GAArC,CAAf;AACD;AAED,eAAe,SAAf","sourcesContent":["import mapProps from \"./mapProps\";\nimport omit from \"./utils/omit\";\n\nexport function omitProps<T extends string | symbol>(...propNames: T[]) {\n  return mapProps((props) => omit(props, ...propNames));\n}\n\nexport default omitProps;\n"]},"metadata":{},"sourceType":"module"}