{"ast":null,"code":"var _jsxFileName = \"/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/commons/Messages.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from './Button';\nimport { hideMessages } from '../../actions/messageAction';\n\nfunction Messages() {\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (messages.messageText !== '') {\n      setTimeout(() => {\n        dispatch(hideMessages());\n      }, 2000);\n    }\n  }, [dispatch, messages.messageText]);\n\n  if (messages.messageText !== '') {\n    return React.createElement(\"div\", {\n      className: \"messages__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `messages ${messages.status ? messages.status : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, messages.status.charAt(0).toLocaleUpperCase() + messages.status.slice(1)), messages.messageText), React.createElement(Button, {\n      icon: \"mdi-close\",\n      onClick: () => dispatch(hideMessages()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  }\n\n  return null;\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/commons/Messages.js"],"names":["React","useEffect","useDispatch","useSelector","Button","hideMessages","Messages","messages","state","dispatch","messageText","setTimeout","status","charAt","toLocaleUpperCase","slice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,CAACG,WAAT,KAAyB,EAA7B,EAAiC;AAC/BC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACI,QAAD,EAAWF,QAAQ,CAACG,WAApB,CANM,CAAT;;AAQA,MAAIH,QAAQ,CAACG,WAAT,KAAyB,EAA7B,EAAiC;AAC/B,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,YAAWH,QAAQ,CAACK,MAAT,GAAkBL,QAAQ,CAACK,MAA3B,GAAoC,EAAG,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,CAACK,MAAT,CAAgBC,MAAhB,CAAuB,CAAvB,EAA0BC,iBAA1B,KACCP,QAAQ,CAACK,MAAT,CAAgBG,KAAhB,CAAsB,CAAtB,CAFJ,CADF,EAKGR,QAAQ,CAACG,WALZ,CADF,EAQE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACJ,YAAY,EAAb,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF;AAcD;;AACD,SAAO,IAAP;AACD;;AAED,eAAeC,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from './Button';\nimport { hideMessages } from '../../actions/messageAction';\n\nfunction Messages() {\n  const messages = useSelector(state => state.messages);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (messages.messageText !== '') {\n      setTimeout(() => {\n        dispatch(hideMessages());\n      }, 2000);\n    }\n  }, [dispatch, messages.messageText]);\n\n  if (messages.messageText !== '') {\n    return (\n      <div className='messages__container'>\n        <div className={`messages ${messages.status ? messages.status : ''}`}>\n          <div>\n            <h5>\n              {messages.status.charAt(0).toLocaleUpperCase() +\n                messages.status.slice(1)}\n            </h5>\n            {messages.messageText}\n          </div>\n          <Button icon='mdi-close' onClick={() => dispatch(hideMessages())} />\n        </div>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}