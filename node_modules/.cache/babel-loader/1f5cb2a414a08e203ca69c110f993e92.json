{"ast":null,"code":"import shouldUpdate from \"./shouldUpdate\";\nimport shallowEqual from \"./utils/shallowEqual\";\nimport pick from \"./utils/pick\";\nexport function onlyUpdateForKeys(propKeys) {\n  return shouldUpdate(function (prev, next) {\n    return !shallowEqual(pick.apply(void 0, [prev].concat(propKeys)), pick.apply(void 0, [next].concat(propKeys)));\n  });\n}\nexport default onlyUpdateForKeys;","map":{"version":3,"sources":["onlyUpdateForKeys.ts"],"names":[],"mappings":"AACA,OAAO,YAAP,MAAyB,gBAAzB;AACA,OAAO,YAAP,MAAyB,sBAAzB;AACA,OAAO,IAAP,MAAiB,cAAjB;AAEA,OAAM,SAAA,iBAAA,CAA8C,QAA9C,EAAyE;AAC7E,SAAO,YAAY,CAAC,UAAC,IAAD,EAAO,IAAP,EAAW;AAAK,WAAA,CAAC,YAAY,CAAC,IAAI,CAAA,KAAJ,CAAI,KAAA,CAAJ,EAAI,CAAC,IAAD,EAAK,MAAL,CAAU,QAAV,CAAJ,CAAD,EAA0B,IAAI,CAAA,KAAJ,CAAI,KAAA,CAAJ,EAAI,CAAC,IAAD,EAAK,MAAL,CAA3C,QAA2C,CAAJ,CAA1B,CAAb;AAA+D,GAAhF,CAAnB;AACD;AAED,eAAe,iBAAf","sourcesContent":["import { Composable } from \"./blueprint\";\nimport shouldUpdate from \"./shouldUpdate\";\nimport shallowEqual from \"./utils/shallowEqual\";\nimport pick from \"./utils/pick\";\n\nexport function onlyUpdateForKeys<T extends string>(propKeys: Array<T | symbol>): Composable {\n  return shouldUpdate((prev, next) => !shallowEqual(pick(prev, ...propKeys), pick(next, ...propKeys)));\n}\n\nexport default onlyUpdateForKeys;\n"]},"metadata":{},"sourceType":"module"}