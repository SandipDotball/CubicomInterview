{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport { stateCallback, propsCallback } from \"./blueprint\";\nimport resolveValue from \"./utils/resolveValue\";\nexport function withState(stateName, updaterName, initialValue) {\n  return {\n    instanceCallbacks: function () {\n      var update;\n      var name;\n      return [stateCallback(function (initState, props) {\n        var newState = initState(String(stateName), resolveValue(initialValue, props));\n        update = newState.updater;\n        name = newState.name;\n      }), propsCallback(function (props, state) {\n        return __assign({}, props, (_a = {}, _a[stateName] = state[name], _a[updaterName] = update, _a));\n\n        var _a;\n      })];\n    }\n  };\n}\nexport default withState;","map":{"version":3,"sources":["withState.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAqB,aAArB,EAAoC,aAApC,QAAyD,aAAzD;AAEA,OAAO,YAAP,MAAyB,sBAAzB;AAgBA,OAAM,SAAA,SAAA,CACJ,SADI,EAEJ,WAFI,EAGJ,YAHI,EAGmD;AAEvD,SAAO;AACL,IAAA,iBAAiB,EAAE,YAAA;AACjB,UAAI,MAAJ;AACA,UAAI,IAAJ;AACA,aAAO,CACL,aAAa,CAAC,UAAC,SAAD,EAAY,KAAZ,EAAiB;AAC7B,YAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,SAAD,CAAP,EAAoB,YAAY,CAAC,YAAD,EAAe,KAAf,CAAhC,CAA1B;AACA,QAAA,MAAM,GAAG,QAAQ,CAAC,OAAlB;AACA,QAAA,IAAI,GAAG,QAAQ,CAAC,IAAhB;AACD,OAJY,CADR,EAML,aAAa,CAAC,UAAC,KAAD,EAAQ,KAAR,EAAa;AAAK,eAAA,QAAA,CAAA,EAAA,EAC3B,KAD2B,GACtB,EAAA,GAAA,EAAA,EAAA,EAAA,CACP,SADO,CAAA,GACe,KAAK,CAAC,IAAD,CADpB,EAC0B,EAAA,CACjC,WADiC,CAAA,GACT,MAFjB,EAEuB,EAHD,EAAA;;;AAI9B,OAJW,CANR,CAAP;AAYD;AAhBI,GAAP;AAkBD;AAED,eAAe,SAAf","sourcesContent":["import { Composable, stateCallback, propsCallback } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport resolveValue from \"./utils/resolveValue\";\n\n// TODO: typings without TPropsIn.\n\nexport function withState(\n  stateName: string | symbol,\n  updaterName: string | symbol,\n  initialValue: Object | Mapper<any, any>,\n): Composable;\n\nexport function withState<TPropsIn, TPropNames extends string | symbol, TPropValue>(\n  stateName: TPropNames,\n  updaterName: TPropNames,\n  initialValue: TPropValue | Mapper<TPropsIn, TPropValue>,\n): Composable;\n\nexport function withState<TPropsIn, TPropNames extends string | symbol, TPropValue>(\n  stateName: TPropNames,\n  updaterName: TPropNames,\n  initialValue: TPropValue | Mapper<TPropsIn, TPropValue>,\n): Composable {\n  return {\n    instanceCallbacks: () => {\n      let update: any;\n      let name: any;\n      return [\n        stateCallback((initState, props) => {\n          const newState = initState(String(stateName), resolveValue(initialValue, props));\n          update = newState.updater;\n          name = newState.name;\n        }),\n        propsCallback((props, state) => ({\n          ...props,\n          [stateName as string]: state[name],\n          [updaterName as string]: update,\n        })),\n      ];\n    },\n  };\n}\n\nexport default withState;\n"]},"metadata":{},"sourceType":"module"}