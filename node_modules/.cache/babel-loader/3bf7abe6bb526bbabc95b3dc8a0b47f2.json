{"ast":null,"code":"import { LOGIN__USER, LOGOUT__USER } from '../constants/actionTypes';\nimport axios from 'axios';\nimport { showMessages } from './messageAction';\nimport { LOGIN__API } from '../constants/API';\nimport { axiosHeader } from '../constants/axiosHeader';\nexport const loginAction = (value, history) => async dispatch => {\n  console.log(value);\n\n  try {\n    const response = await axios.post(LOGIN__API, value, {\n      headers: axiosHeader\n    });\n\n    if (!response.data.access_token) {\n      dispatch(showMessages('error', response.data));\n    } else {\n      dispatch({\n        type: LOGIN__USER,\n        payload: response.data.access_token\n      });\n\n      if (value.remember) {\n        localStorage.setItem('accesstoken', response.data.access_token);\n      } else {\n        sessionStorage.setItem('accesstoken', response.data.access_token);\n      }\n\n      axios.defaults.headers.common['x-access-token'] = response.data.access_token;\n      dispatch(showMessages('success', 'Successfully Login'));\n      history.push('/');\n    }\n  } catch (error) {\n    dispatch(showMessages('error', error.message));\n  }\n};\nexport const logoutAction = () => {\n  localStorage.removeItem('accesstoken');\n  return {\n    type: LOGOUT__USER\n  };\n};","map":{"version":3,"sources":["/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/actions/authActions.js"],"names":["LOGIN__USER","LOGOUT__USER","axios","showMessages","LOGIN__API","axiosHeader","loginAction","value","history","dispatch","console","log","response","post","headers","data","access_token","type","payload","remember","localStorage","setItem","sessionStorage","defaults","common","push","error","message","logoutAction","removeItem"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB,MAAMC,QAAN,IAAkB;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWT,UAAX,EAAuBG,KAAvB,EAA8B;AACnDO,MAAAA,OAAO,EAAET;AAD0C,KAA9B,CAAvB;;AAGA,QAAI,CAACO,QAAQ,CAACG,IAAT,CAAcC,YAAnB,EAAiC;AAC/BP,MAAAA,QAAQ,CAACN,YAAY,CAAC,OAAD,EAAUS,QAAQ,CAACG,IAAnB,CAAb,CAAR;AACD,KAFD,MAEO;AACLN,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEjB,WADC;AAEPkB,QAAAA,OAAO,EAAEN,QAAQ,CAACG,IAAT,CAAcC;AAFhB,OAAD,CAAR;;AAIA,UAAIT,KAAK,CAACY,QAAV,EAAoB;AAClBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCT,QAAQ,CAACG,IAAT,CAAcC,YAAlD;AACD,OAFD,MAEO;AACLM,QAAAA,cAAc,CAACD,OAAf,CAAuB,aAAvB,EAAsCT,QAAQ,CAACG,IAAT,CAAcC,YAApD;AACD;;AAEDd,MAAAA,KAAK,CAACqB,QAAN,CAAeT,OAAf,CAAuBU,MAAvB,CAA8B,gBAA9B,IACEZ,QAAQ,CAACG,IAAT,CAAcC,YADhB;AAEAP,MAAAA,QAAQ,CAACN,YAAY,CAAC,SAAD,EAAY,oBAAZ,CAAb,CAAR;AACAK,MAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD;AACF,GAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdjB,IAAAA,QAAQ,CAACN,YAAY,CAAC,OAAD,EAAUuB,KAAK,CAACC,OAAhB,CAAb,CAAR;AACD;AACF,CA3BM;AA6BP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChCR,EAAAA,YAAY,CAACS,UAAb,CAAwB,aAAxB;AACA,SAAO;AACLZ,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD,CALM","sourcesContent":["import { LOGIN__USER, LOGOUT__USER } from '../constants/actionTypes';\nimport axios from 'axios';\nimport { showMessages } from './messageAction';\nimport { LOGIN__API } from '../constants/API';\nimport { axiosHeader } from '../constants/axiosHeader';\n\nexport const loginAction = (value, history) => async dispatch => {\n  console.log(value);\n  try {\n    const response = await axios.post(LOGIN__API, value, {\n      headers: axiosHeader\n    });\n    if (!response.data.access_token) {\n      dispatch(showMessages('error', response.data));\n    } else {\n      dispatch({\n        type: LOGIN__USER,\n        payload: response.data.access_token\n      });\n      if (value.remember) {\n        localStorage.setItem('accesstoken', response.data.access_token);\n      } else {\n        sessionStorage.setItem('accesstoken', response.data.access_token);\n      }\n\n      axios.defaults.headers.common['x-access-token'] =\n        response.data.access_token;\n      dispatch(showMessages('success', 'Successfully Login'));\n      history.push('/');\n    }\n  } catch (error) {\n    dispatch(showMessages('error', error.message));\n  }\n};\n\nexport const logoutAction = () => {\n  localStorage.removeItem('accesstoken');\n  return {\n    type: LOGOUT__USER\n  };\n};\n"]},"metadata":{},"sourceType":"module"}