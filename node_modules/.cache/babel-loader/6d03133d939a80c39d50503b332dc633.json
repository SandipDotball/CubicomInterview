{"ast":null,"code":"export function combine() {\n  var composables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    composables[_i] = arguments[_i];\n  }\n\n  var callbacks = [];\n  composables.forEach(function (composable) {\n    if (Array.isArray(composable)) {\n      callbacks.push.apply(callbacks, composable);\n    } else {\n      callbacks.push(composable);\n    }\n  });\n  return callbacks;\n}\nexport default combine;","map":{"version":3,"sources":["combine.ts"],"names":[],"mappings":"AAEA,OAAM,SAAA,OAAA,GAAA;AAAkB,MAAA,WAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA4B;AAA5B,IAAA,WAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACtB,MAAM,SAAS,GAAyB,EAAxC;AACA,EAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,UAAD,EAAW;AAC7B,QAAI,KAAK,CAAC,OAAN,CAAc,UAAd,CAAJ,EAA+B;AAC7B,MAAA,SAAS,CAAC,IAAV,CAAc,KAAd,CAAA,SAAA,EAAkB,UAAlB;AACD,KAFD,MAEO;AACL,MAAA,SAAS,CAAC,IAAV,CAAe,UAAf;AACD;AACF,GAND;AAOA,SAAO,SAAP;AACD;AAED,eAAe,OAAf","sourcesContent":["import { Composable, ComponentCallbacks } from \"./blueprint\";\n\nexport function combine(...composables: Composable[]): Composable {\n  const callbacks: ComponentCallbacks[] = [];\n  composables.forEach((composable) => {\n    if (Array.isArray(composable)) {\n      callbacks.push(...composable);\n    } else {\n      callbacks.push(composable);\n    }\n  });\n  return callbacks;\n}\n\nexport default combine;\n"]},"metadata":{},"sourceType":"module"}