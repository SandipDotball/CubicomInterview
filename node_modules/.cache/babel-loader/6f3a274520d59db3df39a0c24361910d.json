{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport convertToCSSPrefix from \"./utils/convertToCSSPrefix\";\n;\nexport function transit(value, duration, timing, delay) {\n  var ret = [value];\n  ret.transitParams = {\n    duration: duration,\n    timing: timing || \"ease\",\n    delay: delay !== undefined ? delay : 0\n  };\n  return ret;\n}\nvar nonWebkitPrefixRegexp = /^-(moz|ms|o)-/;\nexport function resolveTransit(style, extraDelay) {\n  if (extraDelay === void 0) {\n    extraDelay = 0;\n  }\n\n  var transitionList = [];\n  var propertyList = [];\n\n  var processedStyle = __assign({}, style);\n\n  for (var property in style) {\n    var val = style[property];\n\n    if (Array.isArray(val) && val.transitParams) {\n      var _a = val.transitParams,\n          duration = _a.duration,\n          timing = _a.timing,\n          delay = _a.delay;\n      var name_1 = convertToCSSPrefix(property);\n      var transition = name_1 + \" \" + duration + \"ms \" + timing + \" \" + (delay + extraDelay) + \"ms\";\n      transitionList.push(transition);\n      propertyList.push(name_1);\n      processedStyle[property] = val[0];\n    }\n  }\n\n  if (transitionList.length > 0) {\n    processedStyle.transition = transitionList.join(\", \");\n    processedStyle.WebkitTransition = transitionList.filter(function (item, i) {\n      return !propertyList[i].match(nonWebkitPrefixRegexp) && propertyList.indexOf(\"-webkit-\" + propertyList[i]) < 0;\n    }).join(\", \");\n  }\n\n  return processedStyle;\n}","map":{"version":3,"sources":["transit.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,OAAO,kBAAP,MAA+B,4BAA/B;AAUC;AAED,OAAM,SAAA,OAAA,CAAkB,KAAlB,EAA8B,QAA9B,EAAgD,MAAhD,EAAiE,KAAjE,EAA+E;AACnF,MAAM,GAAG,GAAG,CAAC,KAAD,CAAZ;AACC,EAAA,GAAsB,CAAC,aAAvB,GAAuC;AACtC,IAAA,QAAQ,EAAA,QAD8B;AAEtC,IAAA,MAAM,EAAE,MAAM,IAAI,MAFoB;AAGtC,IAAA,KAAK,EAAE,KAAK,KAAK,SAAV,GAAsB,KAAtB,GAA8B;AAHC,GAAvC;AAKD,SAAO,GAAP;AACD;AAED,IAAM,qBAAqB,GAAG,eAA9B;AAEA,OAAM,SAAA,cAAA,CAAyB,KAAzB,EAA+C,UAA/C,EAA6D;AAAd,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAc;;AACjE,MAAI,cAAc,GAAa,EAA/B;AACA,MAAI,YAAY,GAAa,EAA7B;;AACA,MAAI,cAAc,GAAA,QAAA,CAAA,EAAA,EAAQ,KAAR,CAAlB;;AACA,OAAK,IAAM,QAAX,IAAuB,KAAvB,EAA8B;AAC5B,QAAM,GAAG,GAAG,KAAK,CAAC,QAAD,CAAjB;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,GAAd,KAAuB,GAAsB,CAAC,aAAlD,EAAiE;AACzD,UAAA,EAAA,GAAA,GAAA,CAAA,aAAA;AAAA,UAAC,QAAA,GAAA,EAAA,CAAA,QAAD;AAAA,UAAW,MAAA,GAAA,EAAA,CAAA,MAAX;AAAA,UAAmB,KAAA,GAAA,EAAA,CAAA,KAAnB;AACN,UAAM,MAAI,GAAG,kBAAkB,CAAC,QAAD,CAA/B;AACA,UAAM,UAAU,GAAM,MAAI,GAAA,GAAJ,GAAQ,QAAR,GAAgB,KAAhB,GAAsB,MAAtB,GAA4B,GAA5B,IAAgC,KAAK,GAAG,UAAxC,IAAkD,IAAxE;AACA,MAAA,cAAc,CAAC,IAAf,CAAoB,UAApB;AACA,MAAA,YAAY,CAAC,IAAb,CAAkB,MAAlB;AACA,MAAA,cAAc,CAAC,QAAD,CAAd,GAA2B,GAAG,CAAC,CAAD,CAA9B;AACD;AACF;;AACD,MAAI,cAAc,CAAC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,IAAA,cAAc,CAAC,UAAf,GAA4B,cAAc,CAAC,IAAf,CAAoB,IAApB,CAA5B;AACC,IAAA,cAAsB,CAAC,gBAAvB,GAA0C,cAAc,CACvD,MADyC,CAClC,UAAC,IAAD,EAAO,CAAP,EAAQ;AACb,aAAA,CAAC,YAAY,CAAC,CAAD,CAAZ,CAAgB,KAAhB,CAAsB,qBAAtB,CAAD,IACA,YAAY,CAAC,OAAb,CAAqB,aAAa,YAAY,CAAC,CAAD,CAA9C,IAAqD,CADrD;AACsD,KAHf,EAIzC,IAJyC,CAIpC,IAJoC,CAA1C;AAKF;;AACD,SAAO,cAAP;AACD","sourcesContent":["import { CSSProperties } from \"react\";\n\nimport convertToCSSPrefix from \"./utils/convertToCSSPrefix\";\n\ninterface TransitionParams {\n  duration: number;\n  timing?: string;\n  delay?: number;\n}\n\ninterface AugmentedArray extends Array<any> {\n  transitParams: TransitionParams;\n};\n\nexport function transit(value: any, duration: number, timing?: string, delay?: number): any {\n  const ret = [value];\n  (ret as AugmentedArray).transitParams = {\n    duration,\n    timing: timing || \"ease\",\n    delay: delay !== undefined ? delay : 0,\n  };\n  return ret;\n}\n\nconst nonWebkitPrefixRegexp = /^-(moz|ms|o)-/;\n\nexport function resolveTransit(style: CSSProperties, extraDelay = 0): CSSProperties {\n  let transitionList: string[] = [];\n  let propertyList: string[] = [];\n  let processedStyle = { ...style };\n  for (const property in style) {\n    const val = style[property];\n    if (Array.isArray(val) && (val as AugmentedArray).transitParams) {\n      const {duration, timing, delay} = (val as AugmentedArray).transitParams;\n      const name = convertToCSSPrefix(property);\n      const transition = `${name} ${duration}ms ${timing} ${delay + extraDelay}ms`;\n      transitionList.push(transition);\n      propertyList.push(name);\n      processedStyle[property] = val[0];\n    }\n  }\n  if (transitionList.length > 0) {\n    processedStyle.transition = transitionList.join(\", \");\n    (processedStyle as any).WebkitTransition = transitionList.\n      filter((item, i) =>\n        !propertyList[i].match(nonWebkitPrefixRegexp) &&\n        propertyList.indexOf(\"-webkit-\" + propertyList[i]) < 0).\n      join(\", \");\n  }\n  return processedStyle;\n}\n"]},"metadata":{},"sourceType":"module"}