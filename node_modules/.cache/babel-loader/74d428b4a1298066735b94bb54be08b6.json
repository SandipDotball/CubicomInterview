{"ast":null,"code":"import combine from \"./combine\";\nimport resolveValue from \"./utils/resolveValue\";\nexport var lazyLoadCallback = function (callback) {\n  return {\n    kind: \"lazyLoadCallback\",\n    callback: callback\n  };\n};\nexport var propsCallback = function (callback) {\n  return {\n    kind: \"propsCallback\",\n    callback: callback\n  };\n};\nexport var stateCallback = function (callback) {\n  return {\n    kind: \"stateCallback\",\n    callback: callback\n  };\n};\nexport var childContextCallback = function (callback) {\n  return {\n    kind: \"childContextCallback\",\n    callback: callback\n  };\n};\nexport var skipCallback = function (callback) {\n  return {\n    kind: \"skipCallback\",\n    callback: callback\n  };\n};\nexport var renderCallback = function (callback) {\n  return {\n    kind: \"renderCallback\",\n    callback: callback\n  };\n};\nexport var componentWillMountCallback = function (callback) {\n  return {\n    kind: \"componentWillMountCallback\",\n    callback: callback\n  };\n};\nexport var componentDidMountCallback = function (callback) {\n  return {\n    kind: \"componentDidMountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUnmountCallback = function (callback) {\n  return {\n    kind: \"componentWillUnmountCallback\",\n    callback: callback\n  };\n};\nexport var componentWillReceivePropsCallback = function (callback) {\n  return {\n    kind: \"componentWillReceivePropsCallback\",\n    callback: callback\n  };\n};\nexport var shouldComponentUpdateCallback = function (callback) {\n  return {\n    kind: \"shouldComponentUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentWillUpdateCallback = function (callback) {\n  return {\n    kind: \"componentWillUpdateCallback\",\n    callback: callback\n  };\n};\nexport var componentDidUpdateCallback = function (callback) {\n  return {\n    kind: \"componentDidUpdateCallback\",\n    callback: callback\n  };\n};\nexport function createBlueprint() {\n  var composables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    composables[_i] = arguments[_i];\n  }\n\n  var componentCallbacks = combine.apply(void 0, composables);\n  return {\n    staticCallbacks: componentCallbacks.filter(function (c) {\n      return c.staticCallback;\n    }).map(function (c) {\n      return c.staticCallback;\n    }),\n    instanceCallbacks: function () {\n      var result = [];\n      componentCallbacks.forEach(function (c) {\n        if (!c.instanceCallbacks) {\n          return;\n        }\n\n        var instanceCallbacks = resolveValue(c.instanceCallbacks);\n\n        if (!instanceCallbacks) {\n          return;\n        }\n\n        result.push.apply(result, instanceCallbacks);\n      });\n      return result;\n    }\n  };\n}","map":{"version":3,"sources":["blueprint.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentClass } from \"react\";\n\nimport { ReactComponent, ReactAnyComponent } from \"./types\";\nimport combine from \"./combine\";\nimport resolveValue from \"./utils/resolveValue\";\n\nexport type StateUpdater<T> = (newState: T, callback?: () => void) => void;\n\nexport type StaticCallback = (componentClass: ComponentClass<any>, target: ReactComponent<any> | string) => void;\n\nexport type LifeCycleCallbackTypes = {\n  componentWillMountCallback?: (props: any, state: any, context: any) => () => void;\n  componentDidMountCallback?: (props: any, state: any, context: any) => () => void;\n  componentWillUnmountCallback?: (props: any, state: any, context: any) => () => void;\n  componentWillReceivePropsCallback?: (props: any, state: any, context: any) => () => void;\n  shouldComponentUpdateCallback?: (props: any, state: any, context: any) => () => boolean;\n  componentWillUpdateCallback?: (props: any, state: any, context: any) => () => void;\n  componentDidUpdateCallback?: (props: any, state: any, context: any) => () => void;\n};\n\nexport type InstanceCallbackTypes = LifeCycleCallbackTypes & {\n  lazyLoadCallback?: (props: any, state: any, context: any) => InstanceCallbackList;\n  propsCallback?: (props: any, state: any, context: any) => any;\n  childContextCallback?: (childContext: any, props: any, state: any, context: any) => any;\n  stateCallback?: (\n    initState: (name: string, value: any) => { name: string, updater: StateUpdater<any> },\n    props: any, state: any, context: any,\n  ) => void;\n  skipCallback?: (props: any, state: any, context: any) => number;\n  renderCallback?: (component: ReactAnyComponent, props: any, state: any, context: any) => ReactAnyComponent;\n};\n\nexport type InstanceCallbackEntry<T extends keyof InstanceCallbackTypes> = {\n  kind: T,\n  callback: InstanceCallbackTypes[T],\n};\n\n/*\n * TODO(cvle): Bug: using the typesafe version does not work.\n * Log: Return type of exported function has or is using name 'InstanceCallbackEntry'\n * from external module \"./src/blueprint\" but cannot be named.\n */\nexport type InstanceCallbackList =\n  Array<InstanceCallbackEntry<any>>;\n\nexport type InstanceCallbackListTypesafe =\n  Array<InstanceCallbackEntry<\"lazyLoadCallback\">\n  | InstanceCallbackEntry<\"propsCallback\">\n  | InstanceCallbackEntry<\"stateCallback\">\n  | InstanceCallbackEntry<\"childContextCallback\">\n  | InstanceCallbackEntry<\"skipCallback\">\n  | InstanceCallbackEntry<\"renderCallback\">\n  | InstanceCallbackEntry<\"componentWillMountCallback\">\n  | InstanceCallbackEntry<\"componentDidMountCallback\">\n  | InstanceCallbackEntry<\"componentWillUnmountCallback\">\n  | InstanceCallbackEntry<\"componentWillReceivePropsCallback\">\n  | InstanceCallbackEntry<\"shouldComponentUpdateCallback\">\n  | InstanceCallbackEntry<\"componentWillUpdateCallback\">\n  | InstanceCallbackEntry<\"componentDidUpdateCallback\">>;\n\nexport type ComponentCallbacks = {\n  staticCallback?: StaticCallback;\n  instanceCallbacks?: (() => InstanceCallbackList) | InstanceCallbackList;\n};\n\nexport type Composable = ComponentCallbacks | ComponentCallbacks[];\n\nexport type CallbackEntryHelper<T extends keyof InstanceCallbackTypes> =\n  (callback: InstanceCallbackTypes[T]) => InstanceCallbackEntry<T>;\n\nexport const lazyLoadCallback: CallbackEntryHelper<\"lazyLoadCallback\"> =\n  (callback) => ({ kind: \"lazyLoadCallback\", callback });\n\nexport const propsCallback: CallbackEntryHelper<\"propsCallback\"> =\n  (callback) => ({ kind: \"propsCallback\", callback });\n\nexport const stateCallback: CallbackEntryHelper<\"stateCallback\"> =\n  (callback) => ({ kind: \"stateCallback\", callback });\n\nexport const childContextCallback: CallbackEntryHelper<\"childContextCallback\"> =\n  (callback) => ({ kind: \"childContextCallback\", callback });\n\nexport const skipCallback: CallbackEntryHelper<\"skipCallback\"> =\n  (callback) => ({ kind: \"skipCallback\", callback });\n\nexport const renderCallback: CallbackEntryHelper<\"renderCallback\"> =\n  (callback) => ({ kind: \"renderCallback\", callback });\n\nexport const componentWillMountCallback: CallbackEntryHelper<\"componentWillMountCallback\"> =\n  (callback) => ({ kind: \"componentWillMountCallback\", callback });\n\nexport const componentDidMountCallback: CallbackEntryHelper<\"componentDidMountCallback\"> =\n  (callback) => ({ kind: \"componentDidMountCallback\", callback });\n\nexport const componentWillUnmountCallback: CallbackEntryHelper<\"componentWillUnmountCallback\"> =\n  (callback) => ({ kind: \"componentWillUnmountCallback\", callback });\n\nexport const componentWillReceivePropsCallback: CallbackEntryHelper<\"componentWillReceivePropsCallback\"> =\n  (callback) => ({ kind: \"componentWillReceivePropsCallback\", callback });\n\nexport const shouldComponentUpdateCallback: CallbackEntryHelper<\"shouldComponentUpdateCallback\"> =\n  (callback) => ({ kind: \"shouldComponentUpdateCallback\", callback });\n\nexport const componentWillUpdateCallback: CallbackEntryHelper<\"componentWillUpdateCallback\"> =\n  (callback) => ({ kind: \"componentWillUpdateCallback\", callback });\n\nexport const componentDidUpdateCallback: CallbackEntryHelper<\"componentDidUpdateCallback\"> =\n  (callback) => ({ kind: \"componentDidUpdateCallback\", callback });\n\nexport type Blueprint = {\n  staticCallbacks?: StaticCallback[];\n  instanceCallbacks?: () => InstanceCallbackListTypesafe;\n};\n\nexport function createBlueprint(...composables: Composable[]): Blueprint {\n  const componentCallbacks: ComponentCallbacks[] = combine(...composables) as ComponentCallbacks[];\n  return {\n    staticCallbacks: componentCallbacks.filter((c) => c.staticCallback).map((c) => c.staticCallback),\n    instanceCallbacks: () => {\n      const result: InstanceCallbackList = [];\n      componentCallbacks.forEach((c) => {\n        if (!c.instanceCallbacks) { return; }\n        const instanceCallbacks: any = resolveValue(c.instanceCallbacks);\n        if (!instanceCallbacks) { return; }\n        result.push(...instanceCallbacks);\n      });\n      return result;\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}