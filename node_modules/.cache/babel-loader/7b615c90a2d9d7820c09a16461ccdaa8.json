{"ast":null,"code":"export function memoize(cb, hasher) {\n  var cache = {};\n\n  var ret = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var hash = hasher.apply(void 0, args);\n\n    if (hash in cache) {\n      return cache[hash];\n    }\n\n    var result = cb.apply(void 0, args);\n    cache[hash] = result;\n    return result;\n  };\n\n  return ret;\n}\nexport default memoize;","map":{"version":3,"sources":["utils/memoize.ts"],"names":[],"mappings":"AAAA,OAAM,SAAA,OAAA,CAAqB,EAArB,EAA4B,MAA5B,EAA8D;AAClE,MAAM,KAAK,GAAQ,EAAnB;;AACA,MAAM,GAAG,GAAQ,YAAA;AAAC,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAChB,QAAM,IAAI,GAAG,MAAM,CAAA,KAAN,CAAM,KAAA,CAAN,EAAU,IAAV,CAAb;;AACA,QAAI,IAAI,IAAI,KAAZ,EAAmB;AACjB,aAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AACD,QAAM,MAAM,GAAI,EAAU,CAAA,KAAV,CAAU,KAAA,CAAV,EAAc,IAAd,CAAhB;AACA,IAAA,KAAK,CAAC,IAAD,CAAL,GAAc,MAAd;AACA,WAAO,MAAP;AACD,GARD;;AASA,SAAO,GAAP;AACD;AAED,eAAe,OAAf","sourcesContent":["export function memoize<T>(cb: T, hasher: (...args: any[]) => string): T {\n  const cache: any = {};\n  const ret: any = (...args: any[]) => {\n    const hash = hasher(...args);\n    if (hash in cache) {\n      return cache[hash];\n    }\n    const result = (cb as any)(...args);\n    cache[hash] = result;\n    return result;\n  };\n  return ret;\n}\n\nexport default memoize;\n"]},"metadata":{},"sourceType":"module"}