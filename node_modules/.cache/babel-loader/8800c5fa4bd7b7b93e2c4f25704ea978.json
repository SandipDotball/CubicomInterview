{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport mapProps from \"./mapProps\";\nexport function flattenProp(propName) {\n  return mapProps(function (props) {\n    return __assign({}, props, props[propName]);\n  });\n}\nexport default flattenProp;","map":{"version":3,"sources":["flattenProp.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,QAAP,MAAqB,YAArB;AAEA,OAAM,SAAA,WAAA,CAAiD,QAAjD,EAA4D;AAChE,SAAO,QAAQ,CAAC,UAAC,KAAD,EAAM;AAAK,WAAA,QAAA,CAAA,EAAA,EACtB,KADsB,EAEtB,KAAK,CAFiB,QAEjB,CAFiB,CAAA;AAGzB,GAHa,CAAf;AAID;AAED,eAAe,WAAf","sourcesContent":["import mapProps from \"./mapProps\";\n\nexport function flattenProp<T extends string | symbol>(propName: T) {\n  return mapProps((props) => ({\n    ...props,\n    ...props[propName],\n  }));\n}\n\nexport default flattenProp;\n"]},"metadata":{},"sourceType":"module"}