{"ast":null,"code":"var keys = Object.keys,\n    getOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport var getKeysAndSymbols = function (obj) {\n  var result = keys(obj);\n\n  if (getOwnPropertySymbols !== undefined) {\n    result = result.concat(getOwnPropertySymbols(obj));\n  }\n\n  return result;\n};\nexport default getKeysAndSymbols;","map":{"version":3,"sources":["utils/getKeysAndSymbols.ts"],"names":[],"mappings":"AAAO,IAAA,IAAA,GAAA,MAAA,CAAA,IAAA;AAAA,IAAM,qBAAA,GAAA,MAAA,CAAA,qBAAN;AAEP,OAAO,IAAM,iBAAiB,GAAG,UAAC,GAAD,EAAS;AACxC,MAAI,MAAM,GAA2B,IAAI,CAAC,GAAD,CAAzC;;AACA,MAAI,qBAAqB,KAAK,SAA9B,EAAyC;AACvC,IAAA,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,qBAAqB,CAAC,GAAD,CAAnC,CAAT;AACD;;AACD,SAAO,MAAP;AACD,CANM;AAQP,eAAe,iBAAf","sourcesContent":["const {keys, getOwnPropertySymbols} = Object;\n\nexport const getKeysAndSymbols = (obj: any) => {\n  let result: Array<string | symbol> = keys(obj);\n  if (getOwnPropertySymbols !== undefined) {\n    result = result.concat(getOwnPropertySymbols(obj));\n  }\n  return result;\n};\n\nexport default getKeysAndSymbols;\n"]},"metadata":{},"sourceType":"module"}