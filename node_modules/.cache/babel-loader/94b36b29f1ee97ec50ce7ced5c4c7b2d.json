{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport { stateCallback, propsCallback } from \"./blueprint\";\nimport resolveValue from \"./utils/resolveValue\";\nexport function withReducer(stateName, dispatcherName, reducer, initialValue) {\n  return {\n    instanceCallbacks: function () {\n      var update;\n      var name;\n      var dispatcher;\n      var curState;\n      return [stateCallback(function (initState, props) {\n        var newState = initState(String(stateName), resolveValue(initialValue, props));\n        update = newState.updater;\n        name = newState.name;\n\n        dispatcher = function (action, callback) {\n          return update(reducer(curState, action), callback);\n        };\n      }), propsCallback(function (props, state) {\n        curState = state[name];\n        return __assign({}, props, (_a = {}, _a[stateName] = curState, _a[dispatcherName] = dispatcher, _a));\n\n        var _a;\n      })];\n    }\n  };\n}\nexport default withReducer;","map":{"version":3,"sources":["withReducer.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAqB,aAArB,EAAoC,aAApC,QAAyD,aAAzD;AAEA,OAAO,YAAP,MAAyB,sBAAzB;AAkBA,OAAM,SAAA,WAAA,CACJ,SADI,EAEJ,cAFI,EAGJ,OAHI,EAIJ,YAJI,EAIqD;AAEzD,SAAO;AACL,IAAA,iBAAiB,EAAE,YAAA;AACjB,UAAI,MAAJ;AACA,UAAI,IAAJ;AACA,UAAI,UAAJ;AACA,UAAI,QAAJ;AACA,aAAO,CACL,aAAa,CAAC,UAAC,SAAD,EAAY,KAAZ,EAAiB;AAC7B,YAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,SAAD,CAAP,EAAoB,YAAY,CAAC,YAAD,EAAe,KAAf,CAAhC,CAA1B;AACA,QAAA,MAAM,GAAG,QAAQ,CAAC,OAAlB;AACA,QAAA,IAAI,GAAG,QAAQ,CAAC,IAAhB;;AACA,QAAA,UAAU,GAAG,UAAC,MAAD,EAAc,QAAd,EAA2B;AAAK,iBAAA,MAAM,CAAC,OAAO,CAAC,QAAD,EAAW,MAAX,CAAR,EAAN,QAAM,CAAN;AAA2C,SAAxF;AACD,OALY,CADR,EAOL,aAAa,CAAC,UAAC,KAAD,EAAQ,KAAR,EAAa;AACzB,QAAA,QAAQ,GAAG,KAAK,CAAC,IAAD,CAAhB;AACA,eAAM,QAAA,CAAA,EAAA,EACD,KADC,GACI,EAAA,GAAA,EAAA,EAAA,EAAA,CACP,SADO,CAAA,GACe,QADf,EACuB,EAAA,CAC9B,cAD8B,CAAA,GACH,UAFpB,EAE8B,EAHlC,EAAN;;;AAKD,OAPY,CAPR,CAAP;AAgBD;AAtBI,GAAP;AAwBD;AAED,eAAe,WAAf","sourcesContent":["import { Composable, stateCallback, propsCallback } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport resolveValue from \"./utils/resolveValue\";\n\nexport type Reducer<TState, TAction> = (s: TState, a: TAction) => TState;\n\nexport function withReducer(\n  stateName: string | symbol,\n  dispatcherName: string | symbol,\n  reducer: Reducer<any, any>,\n  initialValue: Object | Mapper<any, any>,\n): Composable;\n\nexport function withReducer<TPropsIn, TPropNames extends string | symbol, TPropsValue, TAction>(\n  stateName: TPropNames,\n  dispatcherName: TPropNames,\n  reducer: Reducer<TPropsValue, TAction>,\n  initialValue: TPropsValue | Mapper<TPropsIn, TPropsValue>,\n): Composable;\n\nexport function withReducer<TPropsIn, TPropNames extends string | symbol, TPropsValue, TAction>(\n  stateName: TPropNames,\n  dispatcherName: TPropNames,\n  reducer: Reducer<TPropsValue, TAction>,\n  initialValue: TPropsValue | Mapper<TPropsIn, TPropsValue>,\n): Composable {\n  return {\n    instanceCallbacks: () => {\n      let update: any;\n      let name: any;\n      let dispatcher: any;\n      let curState: any;\n      return [\n        stateCallback((initState, props) => {\n          const newState = initState(String(stateName), resolveValue(initialValue, props));\n          update = newState.updater;\n          name = newState.name;\n          dispatcher = (action: any, callback: any) => update(reducer(curState, action), callback);\n        }),\n        propsCallback((props, state) => {\n          curState = state[name];\n          return {\n            ...props,\n            [stateName as string]: curState,\n            [dispatcherName as string]: dispatcher,\n          };\n        }),\n      ];\n    },\n  };\n}\n\nexport default withReducer;\n"]},"metadata":{},"sourceType":"module"}