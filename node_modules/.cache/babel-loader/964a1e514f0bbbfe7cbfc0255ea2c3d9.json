{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport { propsCallback } from \"./blueprint\";\nimport resolveValue from \"./utils/resolveValue\";\nimport getKeysAndSymbols from \"./utils/getKeysAndSymbols\";\nexport function withHandlers(handlerCreators) {\n  return {\n    instanceCallbacks: function () {\n      var handlers;\n      var handlerProps;\n      return [propsCallback(function (props) {\n        if (!handlers) {\n          handlers = {};\n          var resolvedHandlers_1 = resolveValue(handlerCreators, props);\n          getKeysAndSymbols(resolvedHandlers_1).forEach(function (name) {\n            return handlers[name] = function () {\n              var args = [];\n\n              for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n              }\n\n              return resolvedHandlers_1[name](handlerProps).apply(void 0, args);\n            };\n          });\n        }\n\n        handlerProps = props;\n        return __assign({}, props, handlers);\n      })];\n    }\n  };\n}\nexport default withHandlers;","map":{"version":3,"sources":["withHandlers.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAqB,aAArB,QAA0C,aAA1C;AAEA,OAAO,YAAP,MAAyB,sBAAzB;AACA,OAAO,iBAAP,MAA8B,2BAA9B;AAkBA,OAAM,SAAA,YAAA,CACJ,eADI,EAC6G;AAEjH,SAAO;AACL,IAAA,iBAAiB,EAAE,YAAA;AACjB,UAAI,QAAJ;AACA,UAAI,YAAJ;AACA,aAAO,CACL,aAAa,CAAC,UAAC,KAAD,EAAM;AAClB,YAAI,CAAC,QAAL,EAAe;AACb,UAAA,QAAQ,GAAG,EAAX;AACA,cAAM,kBAAgB,GAAQ,YAAY,CAAC,eAAD,EAAkB,KAAlB,CAA1C;AACA,UAAA,iBAAiB,CAAC,kBAAD,CAAjB,CAAoC,OAApC,CACE,UAAC,IAAD,EAAK;AAAK,mBAAA,QAAQ,CAAC,IAAD,CAAR,GAAiB,YAAA;AAAC,kBAAA,IAAA,GAAA,EAAA;;mBAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,gBAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAmB,qBAAA,kBAAgB,CAAC,IAAD,CAAhB,CAAuB,YAAvB,EAAoC,KAApC,CAAoC,KAAA,CAApC,EAAwC,IAAxC,CAAA;AAArC,aAAA;AAAkF,WAD9F;AAGD;;AACD,QAAA,YAAY,GAAG,KAAf;AACA,eAAM,QAAA,CAAA,EAAA,EACD,KADC,EAED,QAFC,CAAN;AAID,OAbY,CADR,CAAP;AAgBD;AApBI,GAAP;AAsBD;AAED,eAAe,YAAf","sourcesContent":["import { Composable, propsCallback } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport resolveValue from \"./utils/resolveValue\";\nimport getKeysAndSymbols from \"./utils/getKeysAndSymbols\";\n\nexport type EventHandler = Function;\nexport type AnyHandleCreators = {\n  [key: string]: Mapper<any, any>;\n};\nexport type HandleCreators<TPropsIn, TPropsOut> = {\n[P in keyof TPropsOut]: Mapper<TPropsIn, TPropsOut[P]>;\n};\n\nexport function withHandlers(\n  handlerCreators: AnyHandleCreators | ((props: any) => AnyHandleCreators),\n): Composable;\n\nexport function withHandlers<TPropsIn, TPropsOut>(\n  handlerCreators: HandleCreators<TPropsIn, TPropsOut> | ((props: TPropsIn) => HandleCreators<TPropsIn, TPropsOut>),\n): Composable;\n\nexport function withHandlers<TPropsIn, TPropsOut>(\n  handlerCreators: HandleCreators<TPropsIn, TPropsOut> | ((props: TPropsIn) => HandleCreators<TPropsIn, TPropsOut>),\n): Composable {\n  return {\n    instanceCallbacks: () => {\n      let handlers: any;\n      let handlerProps: any;\n      return [\n        propsCallback((props) => {\n          if (!handlers) {\n            handlers = {};\n            const resolvedHandlers: any = resolveValue(handlerCreators, props);\n            getKeysAndSymbols(resolvedHandlers).forEach(\n              (name) => handlers[name] = (...args: any[]) => resolvedHandlers[name](handlerProps)(...args),\n            );\n          }\n          handlerProps = props;\n          return {\n            ...props,\n            ...handlers,\n          };\n        }),\n      ];\n    },\n  };\n}\n\nexport default withHandlers;\n"]},"metadata":{},"sourceType":"module"}