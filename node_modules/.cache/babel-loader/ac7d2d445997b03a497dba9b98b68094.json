{"ast":null,"code":"import { LOGIN__USER, LOGOUT__USER } from '../constants/actionTypes';\nimport axios from 'axios';\nimport { showMessages } from './messageAction';\nimport { LOGIN__API } from '../constants/API';\nexport const loginAction = (value, history) => async dispatch => {\n  try {\n    const response = await axios.post(LOGIN__API, value);\n\n    if (!response.data.access_token) {\n      dispatch(showMessages('error', response.data));\n    } else {\n      dispatch({\n        type: LOGIN__USER,\n        payload: response.data.access_token\n      });\n      localStorage.setItem('accesstoken', response.data.access_token);\n      dispatch(showMessages('success', 'Successfully Login'));\n      history.push('/');\n    }\n  } catch (error) {\n    dispatch(showMessages('error', error.message));\n  }\n};\nexport const logoutAction = () => {\n  localStorage.removeItem('accesstoken');\n  return {\n    type: LOGOUT__USER\n  };\n};","map":{"version":3,"sources":["/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/actions/authActions.js"],"names":["LOGIN__USER","LOGOUT__USER","axios","showMessages","LOGIN__API","loginAction","value","history","dispatch","response","post","data","access_token","type","payload","localStorage","setItem","push","error","message","logoutAction","removeItem"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB,MAAMC,QAAN,IAAkB;AAC/D,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWN,UAAX,EAAuBE,KAAvB,CAAvB;;AACA,QAAI,CAACG,QAAQ,CAACE,IAAT,CAAcC,YAAnB,EAAiC;AAC/BJ,MAAAA,QAAQ,CAACL,YAAY,CAAC,OAAD,EAAUM,QAAQ,CAACE,IAAnB,CAAb,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEb,WADC;AAEPc,QAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcC;AAFhB,OAAD,CAAR;AAIAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCP,QAAQ,CAACE,IAAT,CAAcC,YAAlD;AACAJ,MAAAA,QAAQ,CAACL,YAAY,CAAC,SAAD,EAAY,oBAAZ,CAAb,CAAR;AACAI,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD;AACF,GAbD,CAaE,OAAOC,KAAP,EAAc;AACdV,IAAAA,QAAQ,CAACL,YAAY,CAAC,OAAD,EAAUe,KAAK,CAACC,OAAhB,CAAb,CAAR;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChCL,EAAAA,YAAY,CAACM,UAAb,CAAwB,aAAxB;AACA,SAAO;AACLR,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CALM","sourcesContent":["import { LOGIN__USER, LOGOUT__USER } from '../constants/actionTypes';\nimport axios from 'axios';\nimport { showMessages } from './messageAction';\nimport { LOGIN__API } from '../constants/API';\n\nexport const loginAction = (value, history) => async dispatch => {\n  try {\n    const response = await axios.post(LOGIN__API, value);\n    if (!response.data.access_token) {\n      dispatch(showMessages('error', response.data));\n    } else {\n      dispatch({\n        type: LOGIN__USER,\n        payload: response.data.access_token\n      });\n      localStorage.setItem('accesstoken', response.data.access_token);\n      dispatch(showMessages('success', 'Successfully Login'));\n      history.push('/');\n    }\n  } catch (error) {\n    dispatch(showMessages('error', error.message));\n  }\n};\n\nexport const logoutAction = () => {\n  localStorage.removeItem('accesstoken');\n  return {\n    type: LOGOUT__USER\n  };\n};\n"]},"metadata":{},"sourceType":"module"}