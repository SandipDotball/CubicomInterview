{"ast":null,"code":"import { propsCallback } from \"./blueprint\";\nexport var createSimpleLifecycle = function (kind, callback) {\n  return {\n    instanceCallbacks: [{\n      kind: kind,\n      callback: function (props) {\n        return function () {\n          return callback(props);\n        };\n      }\n    }]\n  };\n};\nexport var createComparingLifecycle = function (kind, callback) {\n  return {\n    instanceCallbacks: function () {\n      var prevProps;\n      return [propsCallback(function (props) {\n        if (prevProps === undefined) {\n          prevProps = props;\n        }\n\n        return props;\n      }), {\n        kind: kind,\n        callback: function (props) {\n          return function () {\n            var prevPropsTmp = prevProps;\n            prevProps = props;\n            var result = callback(prevPropsTmp, props);\n            return result;\n          };\n        }\n      }];\n    }\n  };\n};","map":{"version":3,"sources":["lifecycle.ts"],"names":[],"mappings":"AAAA,SAA6C,aAA7C,QAAkE,aAAlE;AAEA,OAAO,IAAM,qBAAqB,GAAG,UAAC,IAAD,EAAqC,QAArC,EAAmE;AACtG,SAAC;AAAE,IAAA,iBAAiB,EAAE,CAAC;AAAE,MAAA,IAAI,EAAA,IAAN;AAAQ,MAAA,QAAQ,EAAE,UAAC,KAAD,EAAW;AAAK,eAAA,YAAA;AAAM,iBAAA,QAAQ,CAAR,KAAQ,CAAR;AAAN,SAAA;AAAqB;AAAvD,KAAD;AAArB,GAAD;AAAkG,CAD7F;AAGP,OAAO,IAAM,wBAAwB,GAAG,UAAC,IAAD,EAAqC,QAArC,EAA4E;AAClH,SAAC;AACC,IAAA,iBAAiB,EAAE,YAAA;AACjB,UAAI,SAAJ;AACA,aAAO,CACL,aAAa,CAAC,UAAC,KAAD,EAAW;AACvB,YAAI,SAAS,KAAK,SAAlB,EAA6B;AAC3B,UAAA,SAAS,GAAG,KAAZ;AACD;;AACD,eAAO,KAAP;AACD,OALY,CADR,EAOL;AACE,QAAA,IAAI,EAAA,IADN;AACQ,QAAA,QAAQ,EAAE,UAAC,KAAD,EAAW;AAAK,iBAAA,YAAA;AAC9B,gBAAM,YAAY,GAAG,SAArB;AACA,YAAA,SAAS,GAAG,KAAZ;AACA,gBAAM,MAAM,GAAG,QAAQ,CAAC,YAAD,EAAe,KAAf,CAAvB;AACA,mBAAO,MAAP;AAJ8B,WAAA;AAK/B;AANH,OAPK,CAAP;AAgBD;AAnBF,GAAD;AAoBgB,CArBX","sourcesContent":["import { Composable, LifeCycleCallbackTypes, propsCallback } from \"./blueprint\";\n\nexport const createSimpleLifecycle = (kind: keyof LifeCycleCallbackTypes, callback: (props: any) => void) =>\n  ({ instanceCallbacks: [{ kind, callback: (props: any) => () => callback(props) }] }) as Composable;\n\nexport const createComparingLifecycle = (kind: keyof LifeCycleCallbackTypes, callback: (prev: any, next: any) => any) =>\n  ({\n    instanceCallbacks: () => {\n      let prevProps: any;\n      return [\n        propsCallback((props: any) => {\n          if (prevProps === undefined) {\n            prevProps = props;\n          }\n          return props;\n        }),\n        {\n          kind, callback: (props: any) => () => {\n            const prevPropsTmp = prevProps;\n            prevProps = props;\n            const result = callback(prevPropsTmp, props);\n            return result;\n          },\n        },\n      ];\n    },\n  }) as Composable;\n"]},"metadata":{},"sourceType":"module"}