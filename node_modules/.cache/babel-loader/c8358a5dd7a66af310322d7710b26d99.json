{"ast":null,"code":"var _jsxFileName = \"/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/LoginForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Button from './commons/Button';\nimport InputField from './commons/InputField';\nimport { formWarn, formValidator } from '../helpers/formValudation';\n\nfunction LoginForm(props) {\n  const {\n    handleSubmit,\n    submitting,\n    onHandleLogin,\n    pristine,\n    reset\n  } = props;\n\n  const onHandleSubmit = value => {\n    onHandleLogin(value);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"login__form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"userName\",\n    type: \"text\",\n    component: InputField,\n    label: \"Username\",\n    id: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"userPassword\",\n    type: \"password\",\n    component: InputField,\n    label: \"Password\",\n    id: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"login__form--buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Button, {\n    name: \"Login\",\n    type: \"submit\",\n    disabled: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Clear Values\")));\n}\n\nexport default reduxForm({\n  form: 'loginform',\n  validate: formValidator,\n  warn: formWarn\n})(LoginForm);","map":{"version":3,"sources":["/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/LoginForm.js"],"names":["React","Field","reduxForm","Button","InputField","formWarn","formValidator","LoginForm","props","handleSubmit","submitting","onHandleLogin","pristine","reset","onHandleSubmit","value","form","validate","warn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,2BAAxC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA,aAA5B;AAA2CC,IAAAA,QAA3C;AAAqDC,IAAAA;AAArD,MAA+DL,KAArE;;AACA,QAAMM,cAAc,GAAGC,KAAK,IAAI;AAC9BJ,IAAAA,aAAa,CAACI,KAAD,CAAb;AACD,GAFD;;AAGA,SACE;AAAM,IAAA,QAAQ,EAAEN,YAAY,CAACK,cAAD,CAA5B;AAA8C,IAAA,SAAS,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEV,UAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAEA,UAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,QAAQ,EAAEM,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEE,QAAQ,IAAIF,UAA5C;AAAwD,IAAA,OAAO,EAAEG,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAfF,CADF;AAwBD;;AAED,eAAeX,SAAS,CAAC;AACvBc,EAAAA,IAAI,EAAE,WADiB;AAEvBC,EAAAA,QAAQ,EAAEX,aAFa;AAGvBY,EAAAA,IAAI,EAAEb;AAHiB,CAAD,CAAT,CAIZE,SAJY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Button from './commons/Button';\nimport InputField from './commons/InputField';\nimport { formWarn, formValidator } from '../helpers/formValudation';\n\nfunction LoginForm(props) {\n  const { handleSubmit, submitting, onHandleLogin, pristine, reset } = props;\n  const onHandleSubmit = value => {\n    onHandleLogin(value);\n  };\n  return (\n    <form onSubmit={handleSubmit(onHandleSubmit)} className='login__form'>\n      <Field\n        name='userName'\n        type='text'\n        component={InputField}\n        label='Username'\n        id='username'\n      />\n      <Field\n        name='userPassword'\n        type='password'\n        component={InputField}\n        label='Password'\n        id='password'\n      />\n      <div className='login__form--buttons'>\n        <Button name='Login' type='submit' disabled={submitting} />\n        <button type='button' disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default reduxForm({\n  form: 'loginform',\n  validate: formValidator,\n  warn: formWarn\n})(LoginForm);\n"]},"metadata":{},"sourceType":"module"}