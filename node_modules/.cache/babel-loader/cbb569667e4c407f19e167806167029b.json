{"ast":null,"code":"var _jsxFileName = \"/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/commons/InputField.js\";\nimport React, { Fragment, useState } from 'react';\nimport { actions } from '../../../src/actions/index';\nimport Button from './Button';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst InputField = ({\n  input,\n  label,\n  type,\n  addOn,\n  placeholder,\n  hideShow,\n  autoFocus,\n  sendOtp,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => {\n  const [togglePassword, setTogglePassword] = useState(true);\n  const dispatch = useDispatch();\n  console.log('sendOtp', sendOtp);\n  return React.createElement(\"div\", {\n    className: \"input__field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `${touched && error ? 'error__show' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, addOn ? React.createElement(\"div\", {\n    className: \"input__field--addOn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, addOn, \"\\xA0-\"), React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: placeholder,\n    type: type,\n    autoFocus: autoFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, type === 'password' && !hideShow ? React.createElement(\"div\", {\n    className: \"input__field--password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: label ? label : type,\n    type: togglePassword ? 'password' : 'text',\n    autoFocus: autoFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), label && React.createElement(\"label\", {\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, label), input.value.length ? React.createElement(\"span\", {\n    onClick: () => setTogglePassword(!togglePassword),\n    className: \"button button__link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, togglePassword ? 'Show' : 'Hide') : null) : React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: label ? label : type,\n    type: type,\n    autoFocus: autoFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), type !== 'password' && label && React.createElement(\"label\", {\n    htmlFor: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, label), sendOtp && React.createElement(\"span\", {\n    onClick: sendOtp,\n    className: \"input__field--sendotp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Send OTP\"), touched && (error && React.createElement(\"div\", {\n    className: \"input__field--error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, error) || warning && React.createElement(\"div\", {\n    className: \"input__field--warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, warning))));\n};\n\nexport default InputField;","map":{"version":3,"sources":["/Users/sandippal/Documents/personal/Interview/cubicom_interview/src/components/commons/InputField.js"],"names":["React","Fragment","useState","actions","Button","useSelector","useDispatch","InputField","input","label","type","addOn","placeholder","hideShow","autoFocus","sendOtp","meta","touched","error","warning","togglePassword","setTogglePassword","dispatch","console","log","value","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,KADkB;AAElBC,EAAAA,KAFkB;AAGlBC,EAAAA,IAHkB;AAIlBC,EAAAA,KAJkB;AAKlBC,EAAAA,WALkB;AAMlBC,EAAAA,QANkB;AAOlBC,EAAAA,SAPkB;AAQlBC,EAAAA,OARkB;AASlBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB;AATY,CAAD,KAUb;AACJ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAMoB,QAAQ,GAAGhB,WAAW,EAA5B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAvB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,GAAEE,OAAO,IAAIC,KAAX,GAAmB,aAAnB,GAAmC,EAAG,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,GACJ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,UADF,EAEE,+CACMH,KADN;AAEE,IAAA,WAAW,EAAEI,WAFf;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,SAAS,EAAEI,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADI,GAWJ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,KAAK,UAAT,IAAuB,CAACG,QAAxB,GACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,+CACML,KADN;AAEE,IAAA,WAAW,EAAEC,KAAK,GAAGA,KAAH,GAAWC,IAF/B;AAGE,IAAA,IAAI,EAAEU,cAAc,GAAG,UAAH,GAAgB,MAHtC;AAIE,IAAA,SAAS,EAAEN,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAOGL,KAAK,IAAI;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAPZ,EAQGD,KAAK,CAACiB,KAAN,CAAYC,MAAZ,GACC;AACE,IAAA,OAAO,EAAE,MAAML,iBAAiB,CAAC,CAACD,cAAF,CADlC;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGA,cAAc,GAAG,MAAH,GAAY,MAH7B,CADD,GAMG,IAdN,CADD,GAkBC,+CACMZ,KADN;AAEE,IAAA,WAAW,EAAEC,KAAK,GAAGA,KAAH,GAAWC,IAF/B;AAGE,IAAA,IAAI,EAAEA,IAHR;AAIE,IAAA,SAAS,EAAEI,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBJ,CAZJ,EAwCGJ,IAAI,KAAK,UAAT,IAAuBD,KAAvB,IAAgC;AAAO,IAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAxCnC,EAyCGM,OAAO,IACN;AAAM,IAAA,OAAO,EAAEA,OAAf;AAAwB,IAAA,SAAS,EAAC,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CJ,EA8CGE,OAAO,KACJC,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCA,KAAtC,CAAV,IACEC,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCA,OAAxC,CAHE,CA9CV,CADF,CADF;AAwDD,CAtED;;AAwEA,eAAeZ,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { actions } from '../../../src/actions/index';\nimport Button from './Button';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst InputField = ({\n  input,\n  label,\n  type,\n  addOn,\n  placeholder,\n  hideShow,\n  autoFocus,\n  sendOtp,\n  meta: { touched, error, warning }\n}) => {\n  const [togglePassword, setTogglePassword] = useState(true);\n  const dispatch = useDispatch();\n  console.log('sendOtp', sendOtp);\n  return (\n    <div className='input__field'>\n      <div className={`${touched && error ? 'error__show' : ''}`}>\n        {addOn ? (\n          <div className='input__field--addOn'>\n            <span>{addOn}&nbsp;-</span>\n            <input\n              {...input}\n              placeholder={placeholder}\n              type={type}\n              autoFocus={autoFocus}\n            />\n          </div>\n        ) : (\n          <Fragment>\n            {type === 'password' && !hideShow ? (\n              <div className='input__field--password'>\n                <input\n                  {...input}\n                  placeholder={label ? label : type}\n                  type={togglePassword ? 'password' : 'text'}\n                  autoFocus={autoFocus}\n                />\n                {label && <label htmlFor=''>{label}</label>}\n                {input.value.length ? (\n                  <span\n                    onClick={() => setTogglePassword(!togglePassword)}\n                    className='button button__link'>\n                    {togglePassword ? 'Show' : 'Hide'}\n                  </span>\n                ) : null}\n              </div>\n            ) : (\n              <input\n                {...input}\n                placeholder={label ? label : type}\n                type={type}\n                autoFocus={autoFocus}\n              />\n            )}\n          </Fragment>\n        )}\n        {type !== 'password' && label && <label htmlFor=''>{label}</label>}\n        {sendOtp && (\n          <span onClick={sendOtp} className='input__field--sendotp'>\n            Send OTP\n          </span>\n        )}\n        {touched &&\n          ((error && <div className='input__field--error'>{error}</div>) ||\n            (warning && (\n              <div className='input__field--warning'>{warning}</div>\n            )))}\n      </div>\n    </div>\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}