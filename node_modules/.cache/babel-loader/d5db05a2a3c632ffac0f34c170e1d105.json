{"ast":null,"code":"var __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from \"react\";\nimport { Component, Children, cloneElement } from \"react\";\nimport * as TransitionGroup from \"react-transition-group/TransitionGroup\";\n\nvar CSSTransitionGroup = function (_super) {\n  __extends(CSSTransitionGroup, _super);\n\n  function CSSTransitionGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.mounted = false;\n\n    _this.componentDidMount = function () {\n      return _this.mounted = true;\n    };\n\n    return _this;\n  }\n\n  CSSTransitionGroup.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        transitionAppear = _a.transitionAppear,\n        children = _a.children,\n        rest = __rest(_a, [\"transitionAppear\", \"children\"]);\n\n    return React.createElement(TransitionGroup, __assign({}, rest), Children.map(children, function (child, index) {\n      return React.createElement(CSSTransitionGroupChild, {\n        transitionAppear: transitionAppear,\n        mounted: _this.mounted,\n        key: child.key\n      }, child);\n    }));\n  };\n\n  return CSSTransitionGroup;\n}(Component);\n\nexport { CSSTransitionGroup };\nCSSTransitionGroup.defaultProps = {\n  component: \"div\"\n};\n\nvar CSSTransitionGroupChild = function (_super) {\n  __extends(CSSTransitionGroupChild, _super);\n\n  function CSSTransitionGroupChild(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onTransitionComplete = function () {\n      var child = Children.only(_this.props.children);\n\n      if (child.props.onTransitionComplete) {\n        child.props.onTransitionComplete();\n      }\n\n      if (_this.leaveDone) {\n        _this.leaveDone();\n      }\n    };\n\n    _this.state = {\n      active: true,\n      transitionAppear: props.mounted || props.transitionAppear\n    };\n    return _this;\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillAppear = function (done) {\n    done();\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillEnter = function (done) {\n    // component was leaving but was interrupted.\n    if (!this.state.active) {\n      this.setState({\n        active: true\n      });\n      this.leaveDone = null;\n    }\n\n    done();\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillLeave = function (done) {\n    this.setState({\n      active: false\n    });\n    this.leaveDone = done;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function () {\n    var _a = this,\n        children = _a.props.children,\n        _b = _a.state,\n        active = _b.active,\n        transitionAppear = _b.transitionAppear,\n        onTransitionComplete = _a.onTransitionComplete;\n\n    return cloneElement(Children.only(children), {\n      active: active,\n      transitionAppear: transitionAppear,\n      onTransitionComplete: onTransitionComplete\n    });\n  };\n\n  return CSSTransitionGroupChild;\n}(Component);\n\nexport { CSSTransitionGroupChild };\nCSSTransitionGroupChild.defaultProps = {\n  transitionAppear: false\n};","map":{"version":3,"sources":["csstransitiongroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Component, Children, ReactElement, HTMLAttributes,\n  ComponentClass, StatelessComponent, cloneElement,\n} from \"react\";\nimport * as TransitionGroup from \"react-transition-group/TransitionGroup\";\n\nimport { CSSTransitionProps } from \"./csstransition\";\n\nexport interface CSSTransitionGroupProps extends\n  HTMLAttributes<any> {\n  transitionAppear?: boolean;\n  component?: string | ComponentClass<any> | StatelessComponent<any>;\n  children?: ReactElement<CSSTransitionProps> | Array<ReactElement<CSSTransitionProps>>;\n}\n\nexport class CSSTransitionGroup extends Component<CSSTransitionGroupProps, {}> {\n  public static defaultProps: any = {\n    component: \"div\",\n  };\n  private mounted = false;\n  public componentDidMount = () => this.mounted = true;\n\n  public render() {\n    const { transitionAppear, children, ...rest } = this.props as any;\n    return (\n      <TransitionGroup {...rest}>\n        {Children.map(children, (child: ReactElement<any>, index) =>\n          <CSSTransitionGroupChild\n            transitionAppear={transitionAppear}\n            mounted={this.mounted}\n            key={child.key}>\n            {child}\n          </CSSTransitionGroupChild>,\n        )}\n      </TransitionGroup>);\n  }\n}\n\nexport interface CSSTransitionGroupChildProps {\n  transitionAppear?: boolean;\n  mounted?: boolean;\n  children?: ReactElement<any>;\n}\n\nexport class CSSTransitionGroupChild extends Component<CSSTransitionGroupChildProps, CSSTransitionProps> {\n  public static defaultProps: any = {\n    transitionAppear: false,\n  };\n  private leaveDone: () => void;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      active: true,\n      transitionAppear: props.mounted || props.transitionAppear,\n    };\n  }\n\n  public componentWillAppear(done: () => void) {\n    done();\n  }\n\n  public componentWillEnter(done: () => void) {\n    // component was leaving but was interrupted.\n    if (!this.state.active) {\n      this.setState({ active: true });\n      this.leaveDone = null;\n    }\n    done();\n  }\n\n  public componentWillLeave(done: () => void) {\n    this.setState({ active: false });\n    this.leaveDone = done;\n  }\n\n  public render() {\n    const { props: {children}, state: { active, transitionAppear}, onTransitionComplete } = this;\n    return cloneElement(\n      Children.only(children),\n      { active, transitionAppear, onTransitionComplete },\n    );\n  }\n\n  private onTransitionComplete = () => {\n    const child = Children.only(this.props.children);\n    if (child.props.onTransitionComplete) { child.props.onTransitionComplete(); }\n    if (this.leaveDone) { this.leaveDone(); }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}