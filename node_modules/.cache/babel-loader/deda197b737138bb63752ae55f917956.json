{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport mapProps from \"./mapProps\";\nimport resolveValue from \"./utils/resolveValue\";\nexport function withProps(createProps) {\n  return mapProps(function (props) {\n    return __assign({}, props, resolveValue(createProps, props));\n  });\n}\nexport default withProps;","map":{"version":3,"sources":["withProps.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,YAAP,MAAyB,sBAAzB;AAUA,OAAM,SAAA,SAAA,CACJ,WADI,EACgD;AAEpD,SAAO,QAAQ,CAAC,UAAC,KAAD,EAAM;AAAK,WAAA,QAAA,CAAA,EAAA,EACtB,KADsB,EAEtB,YAAY,CAAM,WAAN,EAFU,KAEV,CAFU,CAAA;AAGzB,GAHa,CAAf;AAID;AAED,eAAe,SAAf","sourcesContent":["import { Composable } from \"./blueprint\";\nimport { Mapper } from \"./types\";\nimport mapProps from \"./mapProps\";\nimport resolveValue from \"./utils/resolveValue\";\n\nexport function withProps(\n  createProps: Object | Mapper<any, any>,\n): Composable;\n\nexport function withProps<TPropsIn, TPropsOut>(\n  createProps: TPropsOut | Mapper<TPropsIn, TPropsOut>,\n): Composable;\n\nexport function withProps<TPropsIn, TPropsOut>(\n  createProps: TPropsOut | Mapper<TPropsIn, TPropsOut>,\n): Composable {\n  return mapProps((props) => ({\n    ...props,\n    ...resolveValue<any>(createProps, props),\n  }));\n}\n\nexport default withProps;\n"]},"metadata":{},"sourceType":"module"}