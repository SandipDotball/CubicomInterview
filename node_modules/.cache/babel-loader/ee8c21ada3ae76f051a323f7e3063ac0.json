{"ast":null,"code":"var __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nimport { combine, withProps } from \"reassemble\";\n\nvar mergeClasses = function () {\n  var classes = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    classes[_i] = arguments[_i];\n  }\n\n  return classes.filter(function (s) {\n    return s;\n  }).join(\" \");\n};\n\nexport var mergeWithBaseStyle = combine(withProps(function (_a) {\n  var transitionState = _a.transitionState,\n      style = _a.style,\n      className = _a.className;\n  return {\n    style: __assign({}, style, transitionState.style),\n    className: mergeClasses(className, transitionState.className)\n  };\n}));","map":{"version":3,"sources":["composables/mergeWithBaseStyle.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,SAAS,OAAT,EAAkB,SAAlB,QAAmC,YAAnC;;AAKA,IAAM,YAAY,GAAG,YAAA;AAAC,MAAA,OAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAoB;AAApB,IAAA,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAAyB,SAAA,OAAO,CAAC,MAAR,CAAe,UAAC,CAAD,EAAE;AAAK,WAAA,CAAA;AAAC,GAAvB,EAAyB,IAAzB,CAA8B,GAA9B,CAAA;AAAkC,CAAjF;;AAIA,OAAO,IAAM,kBAAkB,GAAG,OAAO,CACvC,SAAS,CACP,UAAC,EAAD,EAAsC;MAAnC,eAAA,GAAA,EAAA,CAAA,e;MAAiB,KAAA,GAAA,EAAA,CAAA,K;MAAO,SAAA,GAAA,EAAA,CAAA,S;AAAgB,SAAC;AAC1C,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAO,KAAP,EAAiB,eAAe,CAAC,KAAjC,CADqC;AAE1C,IAAA,SAAS,EAAE,YAAY,CAAC,SAAD,EAAY,eAAe,CAAC,SAA5B;AAFmB,GAAD;AAGzC,CAJK,CAD8B,CAAlC","sourcesContent":["import { combine, withProps } from \"reassemble\";\nimport { HTMLAttributes } from \"react\";\n\nimport { WithTransitionStateProps } from \"./withTransitionState\";\n\nconst mergeClasses = (...classes: string[]) => classes.filter((s) => s).join(\" \");\n\ntype StyleProps = Pick<HTMLAttributes<any>, \"style\" | \"className\">;\n\nexport const mergeWithBaseStyle = combine(\n  withProps<StyleProps & WithTransitionStateProps, StyleProps>(\n    ({ transitionState, style, className }) => ({\n      style: { ...style, ...transitionState.style },\n      className: mergeClasses(className, transitionState.className),\n    })),\n);\n"]},"metadata":{},"sourceType":"module"}